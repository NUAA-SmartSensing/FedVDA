{
  "wandb": {
    "enabled": false,
    "project": "FedVDA论文",
    "name": "fedvda-adam"
  },
  "global": {
    "mode": "thread",
    "use_file_system": false,
    "multi_gpu": true,
    "experiment": "FedVC/essay/50",
    "stale": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,30,30,30,30,30],
    "dataset": {
      "path": "dataset.CIFAR10.CIFAR10",
      "params": {}
    },
    "iid": {
      "beta": 0.5
    },
    "client_num": 30
  },
  "server": {
    "path": "server.NormalServer.NormalServer",
    "epochs": 200,
    "model": {
      "path": "torchvision.models.resnet.resnet18",
      "params": {
        "num_classes": 10
      }
    },
    "scheduler": {
      "path": "scheduler.VDAScheduler.VDAScheduler",
      "schedule":{
        "path": "schedule.RandomSchedule.RandomSchedule",
        "params": {
          "c_ratio": 0.7
        }
      },
      "time_window": 0
    },
    "updater": {
      "path": "updater.SyncUpdater.SyncUpdater",
      "update": {
        "path": "update.FedAvg.FedAvg",
        "params": {
        }
      },
      "optimizer": {
        "path": "torch.optim.Adam",
        "params": {
          "lr": 0.01,
          "weight_decay": 0
        }
      },
      "loss": "torch.nn.functional.cross_entropy",
      "params": {
      }
    }
  },
  "queue_manager": {
    "path": "queuemanager.VCMQueueManager.VCMQueueManager",
    "vcm": {
      "update": "None"
    },
    "receiver": {
      "path": "receiver.VCMReceiver.VCMReceiver",
      "params": {
      }
    },
    "checker": {
      "path": "checker.AllChecker.AllChecker",
      "params": {
      }
    }
  },
  "client_manager": {
    "path": "clientmanager.NormalClientManager.NormalClientManager"
  },
  "client": {
    "path": "client.NormalClient.NormalClient",
    "epochs": 2,
    "batch_size": 128,
    "model": {
      "path": "torchvision.models.resnet.resnet18",
      "params": {
        "num_classes": 10
      }
    },
    "loss": "torch.nn.functional.cross_entropy",
    "transform": {
      "path": "transforms.Transforms.TransformForCIFARFactory.createTransform",
      "params": {}
    },
    "mu": 0,
    "optimizer": {
      "path": "torch.optim.SGD",
      "params": {
        "lr": 0.3,
        "weight_decay": 0
      }
    }
  }
}